#!/bin/bash
# This is a sample script for launching ABIN simulations in cluster environments
# using MPI TeraChem interface.

# Sample SGE Params on PHOTOX clusters
#$ -V -cwd
#$ -l num_gpu=1
#$ -pe shm 1 -q nq-gpu

# Sample SLURM parameters
#SBATCH --mem=10000
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --cpus-per-task=1
#SBATCH --gres=gpu:1

JOBNAME=TERABIN_${JOB_ID}_$$
# ABIN SETUP 
ABIN_OUT=abin.out
ABIN_IN=input.in
INPUTGEOM=water.xyz
INPUTVELOC=

# TeraChem SETUP
TC_INPUT=tera.inp
MPITYPE=0   # 0 - ground state AIMD
            # 2 - Surface Hopping
delscratch=true
N_TERA_SERVERS=1     # Use more TC servers for PIMD or REMD (Experimental)
################

function files_exist {
   for file in $* ;
   do
      if [[ ! -f $file ]];then
         echo "ERROR: Cannot find file $file"
         error=1
      fi
   done
   if [[ ! -z $error ]];then
      exit 1
   fi
}

files_exist $TC_INPUT $ABIN_IN $INPUTGEOM
if [[ ! -z $INPUTVELOC ]];then
   files_exist $INPUTVELOC
fi

# Check pot=_tera_ in ABIN input
grep -E -q -e ^[^!]*pot[[:space:]]*=[[:space:]]*[\'"]_tera_["\'] $ABIN_IN
if [[ $? -eq 1 ]];then
   echo "ERROR: It appears that you did not specify pot=\'_tera_\' in $ABIN_IN."
   exit 1 
fi

# REMD SETTINGS, automatic from ABIN input
N_REPLICAS=1
grep -E -q -e ^[^!]*iremd[[:space:]]*=[[:space:]]*1\\b $ABIN_IN
if [[ $? -eq 0 ]];then
   echo "REMD detected. Assuming one TC server per replica!"
   N_REPLICAS=$(grep -E -o -e ^[^!]*nreplica[[:space:]]*=[[:space:]]*[0-9]+ $ABIN_IN | grep -E -o -e [0-9]+)
   N_TERA_SERVERS=$N_REPLICAS
fi

export LD_LIBRARY_PATH=
source SetEnvironment.sh TERACHEM trunk
source SetEnvironment.sh ABIN mpi
#hostname="403-as67-01"
hostname=$HOSTNAME
MPIRUN_TERA="$MPIRUN -n 1 -nameserver $hostname"
MPIRUN_ABIN="$MPIRUN -n $N_REPLICAS -nameserver $hostname"

# when using reference potential in multiple time-step MD
# TODO: This is very brittle
pot_ref=$(awk -F"[! ,=\"']+" '{if($1=="pot_ref")print $2}' $ABIN_IN)
INTERFACE_REF=${pot_ref^^}

SCRDIR=/scratch/$USER/$JOBNAME

uname -n > job.log
echo "$SCRDIR" >> job.log

LAUNCH_DIR=$PWD

if [[ -d $SCRDIR ]];then
   echo "ERROR: Job directory $SCRDIR already exist!"
   echo "Perhaps it's a leftover from some old job, you could probably delete it."
   exit 1
else
   mkdir $SCRDIR
fi

cp -p * $SCRDIR/.

if [[ -d $INTERFACE_REF ]];then
   cp -r $INTERFACE_REF $SCRDIR/
fi

cd $SCRDIR

TC_PORT=$JOBNAME.$$
# Make sure hydra_nameserver is running
hydra=$(ps -e | grep hydra_nameser)
if [[ -z $hydra ]];then
   MPIPATH=$(dirname $MPIRUN)
   echo "Launching hydra nameserver for MPI_Lookup"
   if [[ -f $MPIPATH/hydra_nameserver ]];then
      $MPIPATH/hydra_nameserver &
   else
      echo "ERROR: Could not find hydra_nameserver executable"
      exit 1
   fi
fi

let NUM_JOBS=N_TERA_SERVERS+1
declare -A job_pids

# LAUNCH TERACHEM
for ((itera=1;itera<=N_TERA_SERVERS;itera++)) {
   let gpuid=itera-1
   $MPIRUN_TERA $TERAEXE -g$gpuid --inputfile=$TC_INPUT --UseMPI=$MPITYPE --MPIPort=$TC_PORT.$itera > $TC_INPUT.out.$itera 2>&1 &
   job_pids[$itera]=$!
}

# LAUNCH ABIN
ABIN_CMD="$ABINEXE -i $ABIN_IN -x $INPUTGEOM -M $TC_PORT"
if [[ -z $INPUTVELOC ]];then
   ABIN_CMD=$ABIN_CMD" -v $INPUTVELOC"
fi
$MPIRUN_ABIN $ABIN_CMD > $ABIN_OUT 2>&1 &
job_pids[$NUM_JOBS]=$!

# CHECK WHETHER ABIN AND TC ARE RUNNING
function join_by { local IFS="$1"; shift; echo "$*"; }
regex=`join_by \| ${job_pids[@]}`
while true;do
   njobs=$(ps -eo pid|grep -E "$regex"|wc -l)
   if [[ $njobs -eq 0 ]];then
      echo "Both ABIN and TeraChem stopped"
      break
   elif [[ $njobs -lt $NUM_JOBS ]];then
      echo "One of the TC servers or ABIN died. Killing the rest."
      kill -9 ${job_pids[@]} 
      break
   fi
   sleep 10
done

cp -upr * $LAUNCH_DIR/.
if [[ $? -ne "0" ]];then
   echo "Error when copying the data from scratch back to the server."
   echo "I will keep the directory $SCRDIR on node:"
   uname -a
   exit 1
fi

cd ..

if [[ $delscratch -eq "true" ]];then
   rm -r $SCRDIR
   rm $LAUNCH_DIR/job.log
fi
