#!/bin/bash
# ABIN local configuration generator
#
# The local build configuration is stored in make.vars,
# which is NOT under version control.

# Exit script immediately upon error
set -euo pipefail

# Output file name (do not change)
VARS=make.vars

# Default configure options
MPI=FALSE
CP2K=FALSE
PLUMED=FALSE
FFTW=FALSE
ABINEXE=abin

MPI_PATH=''
PFUNIT_PATH=''
PLUMED_PATH=''
CP2K_PATH=''

function show_help()
{
echo "
NAME
   configure - generate local configuration for ABIN

SYNOPSIS
   configure [--debug] [--mpi path/to/mpi] [--plumed path/to/plumed] [--pfunit path/to/pfunit] [--cp2k]

OPTIONS
   --debug       Compile in debug mode
   --mpi         Compile with MPI support
                 (needed for REMD and interface with TeraChem)
   --plumed      Compile with Plumed library
   --fftw        Use FFTW library (needed for normal mode PIMD)
   --cp2k        Cross-compile with CP2K (experimental)
   --pfunit      Compile with unit tests using pFUnit library
                 (use ./install_pfunit.sh to install it first)
"
}

# Overwrite default options from command line
PARAMS="$@"
while [[ $# -gt 0 ]]; do
    case "$1" in
      --debug)
        FFLAGS="-g -O0 -fopenmp -Wall"
        shift
        ;;
      --mpi)
        MPI=TRUE
        if [[ $# -lt 2 ]]; then
            echo "Error: missing MPI_PATH argument"
            exit 1
        fi
        MPI_PATH=$2
        if [[ ! -d $MPI_PATH ]]; then
            echo "$MPI_PATH is not a directory!"
            exit 1
        fi
        shift 2
        ;;
      --plumed)
        PLUMED=TRUE
        if [[ $# -lt 2 ]]; then
            echo "Error: missing PLUMED_PATH argument"
            exit 1
        fi
        PLUMED_PATH=$2
        if [[ ! -d $PLUMED_PATH ]]; then
            echo "$PLUMED_PATH is not a directory!"
            exit 1
        fi
        shift 2
        ;;
      --pfunit)
        if [[ $# -lt 2 ]]; then
            echo "Error: missing PFUNIT_PATH argument"
            exit 1
        fi
        PFUNIT_PATH=$2
        if [[ ! -d $PFUNIT_PATH ]]; then
            echo "$PFUNIT_PATH is not a directory!"
            exit 1
        fi
        shift 2
        ;;
      --fftw)
        echo "Using FFTW library, assuming it's in your LD_LIBRARY_PATH"
        FFTW=TRUE
        shift
        ;;
      --cp2k)
        CP2K=TRUE
        shift
        ;;
      *)
        show_help
        exit 1
        ;;
    esac
done

# Set to default if FFLAGS is not defined yet, see
# https://stackoverflow.com/questions/11362250/in-bash-how-do-i-test-if-a-variable-is-defined-in-u-mode
: ${FFLAGS:='-O2 -fopenmp'}

if [[ -z ${FC-} ]];then
   if [[ $MPI = "TRUE" ]];then
      if [[ $MPI_PATH != "" ]];then
         FC=$MPI_PATH/bin/mpifort
      else
         # By using an empty path, we presume that MPI
         # is already available by default system paths
         FC=mpifort
      fi
   else
      FC="gfortran"
   fi
fi

if [[ ! -f $FC && ! `which $FC` ]];then
   echo "ERROR: program \"$FC\" not found"
   echo "Consider exporting variable \"FC\" manually"
   exit 1
fi

CXX="c++"
CXXFLAGS="-O2 -Wall -std=c++11"

if [[ $MPI = "TRUE" ]];then
   echo "Compilation with MPI"
   ABINEXE=abin.mpi
   # TODO: Check that MPI_PATH exists and contains
   # necessary directories...
fi

if [[ $PLUMED = "TRUE" ]];then
   if [[ ! -f $PLUMED_PATH/Plumed.inc ]];then
      echo "File $PLUMED_PATH/Plumed.inc does not exist!"
      exit 1
   fi
fi

echo "Generating local build configuration for ABIN"
echo "Writing config to $VARS"

# Print all vars to make.vars
rm -rf $VARS
echo "
# Local build configuration, included into Makefile

# This file was built as follows.
# $0 $PARAMS

# Name of the final binary
BIN = $ABINEXE

# Compilers
FC = $FC
CXX = $CXX

# Compiler flags
FFLAGS = $FFLAGS
CXXFLAGS = $CXXFLAGS

# MPI library
MPI = $MPI
MPI_PATH = $MPI_PATH
#MPI_INC = \$(MPI_PATH)/include
# OpenMPI
#MPI_LIBS = -L\$(MPI_PATH)/lib -lmpi
# MPICH
#MPI_LIBS = -L\$(MPI_PATH)/lib -lmpich -lmpl

# Compilation with Plumed library
PLUMED = $PLUMED
PLUMED_LINK = $PLUMED_PATH/Plumed.inc
# TODO: Figure out what this should be
# (it is referenced in Makefile)
PLUMED_STATIC_LOAD = $PLUMED_PATH

# FFTW library is typically shipped with your system
# It is needed for normal mode coordinate transformation in PIMD
FFTW = $FFTW

# Experimental cross-compilation with CP2K
CP2K = $CP2K

# Compile with unit tests
PFUNIT_PATH = $PFUNIT_PATH" > $VARS

# TODO: Make automatic check for FFTW library

if [[ $CP2K = "TRUE" ]];then
   echo "Linkink with CP2K"
   echo "Setup paths to CP2K libs manually in $VARS"
   echo "
CP2K_PATH = /usr/local/src/programes/src/cp2k-2.6.2/lib/Linux-x86-64-gfortran-mkl/sopt/
MKL = /intel/parallel_studio_2015_update5/mkl/lib/intel64/
LIBINT_LIB = /libint/1.1.4-gcc/lib
FFTW_LIB = /fftw/3.3.4-gcc/lib/
LIBXC_LIB = /libxc/2.1.2-gcc/lib
MKL_LIBS = -ldl -L\$(MKL) -lmkl_blas95_lp64 -lmkl_lapack95_lp64\
           -Wl,--start-group \${MKL}/libmkl_intel_lp64.a \${MKL}/libmkl_sequential.a\
            \${MKL}/libmkl_core.a -Wl,--end-group -lpthread

CP2K_LIBS = \$(MKL_LIBS) \
            \$(FFTW_LIB)/libfftw3.a\
            \$(LIBXC_LIB)/libxc.a\
            \$(LIBINT_LIB)/libderiv.a\
            \$(LIBINT_LIB)/libint.a
" >> $VARS
fi

