#!/bin/bash
# File interface to DFTB+ program, tested with version 24.1
# NOTE: You need to tweak the awk routine for converting XYZ geometries
# from ABIN to dftb+ compatible input file.
cd "$(dirname "$0")" || exit 2
set -u

if [[ -f ../SetEnvironment.sh ]]; then
  # This is specific to Prague clusters
  source ../SetEnvironment.sh DFTB
else
  # We assume dftb+ is in PATH already
  DFTBEXE=dftb+
fi

timestep="$1"
ibead="$2"
geom=../geom.dat."$ibead"

natom=$(wc -l < "$geom")
CHARGES_FILE="charges.bin"

# Working directory for the DFTB calculation
WORKDIR=CALC."$ibead"
rm -rf "${WORKDIR}".previous
if [[ -d "$WORKDIR" ]];then
    mv "$WORKDIR" "${WORKDIR}".previous
fi
mkdir -p "$WORKDIR"

# You have to specify, which (unique) elements are present in your system
# i.e. define array el[i]="element"
# No extra elements are allowed.
awk -v natom="$natom" 'BEGIN{
   el[1]="O"
   el[2]="H"
   num_el=2    # number of unique elements

   # END OF USER INPUT
   print natom, "C"
   for (i = 0; i < num_el; i++) {
      printf"%s ", el[i]
   }
   print ""
   print ""
}
#conversion of xyz input to dftb geom
{
   for (i = 0; i < num_el; i++) {
      if ( $1 == el[i] ) {
         print NR, i, $2, $3, $4
      }
   }
}' "$geom" > "$WORKDIR"/geom_in.gen

# Read initial charge distribution
if [[ -f "$CHARGES_FILE" ]]; then
   cp "$CHARGES_FILE" "$WORKDIR"/
   sed 's/#ReadInitialCharges/ReadInitialCharges/' dftb_in.hsd > "$WORKDIR"/dftb_in.hsd
else
   cp dftb_in.hsd "$WORKDIR"/
fi

cd "$WORKDIR" || exit 2

# Everything is ready, run dftb+!
$DFTBEXE &> dftb.out
if [[ $? -ne 0 ]]; then
   echo "ERROR: DFTB calculation failed."
   echo "See $PWD/dftb.out" 
   exit 2
fi

# Extract energy from dftb+ output
grep 'Total energy:' detailed.out | awk '{print $3}' > ../../engrad.dat."$ibead"

# Extract gradients (note the conversion from forces to gradients)
awk -v natom="$natom" '{
  if ($2 == "Forces") {
    for (i = 0; i < natom; i++) {
      getline;
      printf("%3.15e %3.15e %3.15e\n", -$2, -$3, -$4)
    }
  }
}' detailed.out >> ../../engrad.dat."$ibead"

# Copy the charges for the next step
if [[ -f "$CHARGES_FILE" ]]; then
  cp "$CHARGES_FILE" ../
fi
