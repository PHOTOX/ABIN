#!/bin/bash
# File interface to DFTB+ program, https://dftbplus.org/
# This file typically does not need to be modified.
# The input DFTB parameters are given in a file `dftb_in.hsd` in this directory,
# which you need to modify for your needs.
#
# NOTE: This script assumes that the 'dftb+' executable is already in your PATH.
# If that is not the case, modify the variable 'DFTBEXE' below accordingly.
#
# Tested with version 24.1. Other versions might work, but always test
# by verifying energy conservation in a short NVE simulation.
# Versions older than 20.1 will not work since they do not support XYZ geometry input.
cd "$(dirname "$0")" || exit 2
set -u

if [[ -f ../SetEnvironment.sh ]]; then
  # This is specific to Prague clusters
  source ../SetEnvironment.sh DFTB
else
  # We assume dftb+ is in PATH already. If not, add it here.
  DFTBEXE=dftb+
fi

# timestep var not used in this script
# timestep="$1"
# Bead index in PIMD, "001" for classical MD
ibead="$2"

geom="../geom.dat.$ibead"
natom=$(wc -l < "$geom")
WORKDIR="CALC.$ibead"

function prepare_dftb_inputs() {
    # Working directory for the DFTB calculation
    rm -rf "${WORKDIR}".previous
    if [[ -d "$WORKDIR" ]];then
        mv "$WORKDIR" "${WORKDIR}".previous
    fi
    mkdir -p "$WORKDIR"

    echo -e "$natom\n" > "$WORKDIR/geometry.xyz"
    cat "$geom" >> "$WORKDIR/geometry.xyz"

    cp dftb_in.hsd "$WORKDIR"
    # Read charge distribution from previous step if available
    charges_file="$WORKDIR.previous/charges.bin"
    if [[ -f "$charges_file" ]]; then
       cp "$charges_file" "$WORKDIR"
       sed -i 's/#ReadInitialCharges/ReadInitialCharges/' "$WORKDIR/dftb_in.hsd"
    fi
}

function extract_energy_and_gradients() {
    # Extract energy dftb+ output file
    dftb_out="detailed.out"
    engrad_file=$1
    grep 'Total energy:' $dftb_out | awk '{print $3}' > "$engrad_file"

    # Extract gradients (note the conversion from forces to gradients)
    awk -v natom="$natom" '{
      if ($2 == "Forces") {
        for (i = 0; i < natom; i++) {
          getline;
          printf("%3.15e %3.15e %3.15e\n", -$2, -$3, -$4)
        }
      }
    }' $dftb_out >> "$engrad_file"
}

##### LET'S GO! #####
prepare_dftb_inputs

cd "$WORKDIR" || exit 2

$DFTBEXE &> dftb.out
if [[ $? -ne 0 ]]; then
    echo "ERROR: DFTB calculation failed."
    echo "See file '$PWD/dftb.out' to find out why."
    exit 2
fi

extract_energy_and_gradients "../../engrad.dat.$ibead"
