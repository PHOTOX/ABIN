#!/bin/bash
cd CASTEP

# These to files needs to be prepared for CASTEP
CELL_FILE=template.cell
PARAM_FILE=template.param
# (we do not touch param file, only make a copy)
# new cell file is generated each time step from CELL_FILE
# and XYZ geometry from ABIN (from file ../geom.dat.$ibead)

timestep=$1
ibead=$2
input=input$ibead
natom=$(cat ../geom.dat.$ibead | wc -l )

./prepare_castep_cellfile.py -c $CELL_FILE -x ../geom.dat.$ibead > $input.cell

# Copy param file
cp $PARAM_FILE $input.param

output=$input.castep
# CASTEP by default apppends, so remove the old output files
rm -f $output $input.cst_esp $input.check $input.castep_bin
# LAUNCHING CASTEP #

# It seems that CASTEP also outputs to stdin, so we need to get rid of that
mpiexec castep $input > /dev/null

if [[ $? -eq 0 ]];then
   cp $output $output.old
#  cat $output >  $output.all
else
   echo "WARNING from r.castep: CASTEP calculation probably failed."
   echo "See $output.error" 
   cp $output $output.error
   exit 2
fi

### EXTRACTING ENERGY AND FORCES

# ---------------------
# This assumes that CASTEP output forces in Hartrees/Bohr
# This must be specified in the CASTEP input file like this...
# force_unit : hartree/bohr
# energy_unit : hartree
# ---------------------

awk -v natom="$natom" '{if ($4=="energy*") {printf"%10.12f\n",$6*natom}} /z    */ {getline;for(i=1; i<=natom; i++) {getline; printf "%10.12f %10.12f %10.12f \n",-1*$4*natom,-1*$5*natom,-1*$6*natom}}' $output > ../engrad.dat.$ibead
