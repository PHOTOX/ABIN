#!/bin/bash
cd TERA
timestep=$1
ibead=$2
input=input$ibead.com
natom=$(cat ../geom.dat.$ibead | wc -l )


source SetEnvironment.sh TERACHEM # dev  # uncomment this for development version


########  USER INPUT FOR  TERACHEM  ################
parallel=0 #=1 if we execute ABIN in parallel
# TODO: checking for nproc > 0 and parallel=0
# woulds only work if input is input.in
iqmmm=0	  # 0 - QMMM off, 1- QMMM on
natqm=5   # number of qm atoms for qmmm jobs
numgpus=1 # number of gpus 
cat > $input << EOF
basis 		6-31g*
charge   	0	
spinmult	2
method 		ublyp
timings         yes
EOF
######## END OF USER INPUT########


#---------DO NOT MODIFY BELOW------#

scrdir="./scratch$ibead"

if [[ $parallel -eq "1" ]];then
   gpuid=""
   let gpu0=ibead-1
   let gpu0=gpu0*numgpus
else
   gpu0=0
fi

for ((i=0;i<numgpus;i++ )) {
   let gpuindex=gpu0+i
   gpuid="$gpuid $gpuindex"
}

cat >> $input << EOF
scrdir		$scrdir
coordinates	input$ibead.xyz
units 		angstrom
gpus		$numgpus $gpuid
run 		gradient
EOF

#### PASSING THE WAVE FUNCTION
if [[ -e $scrdir/c0 ]];then
	echo "guess	$scrdir/c0" >> $input
fi
if [[ -e $scrdir/ca0 && -e $scrdir/cb0 ]];then
	echo "guess	$scrdir/ca0 $scrdir/cb0" >> $input
fi

### CREATING THE INPUT GEOMETRIES ############
if [[ $iqmmm -eq 1 ]];then
	echo "qmmm           input_mm$ibead.xyz" >> $input
	let natmm=natom-natqm
	cat > input_mm$ibead.xyz << EOF
$natmm

EOF
tail -n $natmm ../geom.dat.$ibead >> input_mm$ibead.xyz

else
	let natqm=natom
fi

echo "end" >> $input


cat > input$ibead.xyz << EOF
$natqm

EOF
head -n $natqm ../geom.dat.$ibead >> input$ibead.xyz
#############################################

###########LAUNCHING TERACHEM################

node=$(uname -n)
export OMP_NUM_THREADS=$numgpus  #setting to number of gpus,used only for MKL library anyway i.e. for initial diagonalization

$TERAEXE  $input > $input.out

#check whether all is ok
if [[ $? -eq 0 ]];then
   cp $input.out $input.out.old
else
   echo "WARNING: TeraChem calculation probably failed."
   echo "See TERA/$input.out.error"
   cp $input.out $input.out.error
fi

########## EXTRACTING DATA ################

grep 'FINAL ENERGY' $input.out | awk '{print $3}' > ../engrad.dat.$ibead
grep -A$natqm 'dE/dX' $input.out|tail -$natqm >> ../engrad.dat.$ibead 

if [[ $iqmmm -eq 1 ]];then
   grep -A$natmm 'MM / Point charge' $input.out|tail -$natmm >> ../engrad.dat.$ibead
fi

