#!/bin/bash

#
#  Numerical force for FOMO in GAMESS
#   - part of the TIME DERIVATIVE COUPLINGS program
#

INPUT=$1

if [ ! -e "$INPUT" ]; then
  echo "*** ERROR: No GAMESS input file found!"
  echo "*** Program will now exit"
  exit
fi

STRINPUT=$2

if [ ! -e "$STRINPUT" ]; then
  echo "*** ERROR: No structure file found!"
  echo "*** Program will now exit"
  exit
fi

NAtoms=`head -n 1 $STRINPUT | awk -F" " '{print $1}'`

if [ -e force_en.temp ]; then
  rm -r force_en.temp
fi

if [ -d NUM_FORCE ]; then
  rm -r NUM_FORCE
  mkdir NUM_FORCE
else
  mkdir NUM_FORCE
fi

/home/sistik/utility/fNumForceGenStr < $STRINPUT > strall.temp

NHead=`grep -n DATA $INPUT | awk -F":" '{print $1}'`
head -n $(( $NHead - 1 )) $INPUT > part_nf.tmp

NLines=`wc -l $INPUT | awk -F" " '{print $1}'`

NEnd=`tail -n $(( $NLines - $NHead - 2 )) $INPUT | grep -ni End | head -n 1 | awk -F":" '{print $1}'`

NTail=$(( $NLines - $NHead - 1 - $NEnd ))

cd NUM_FORCE
#
#  first we need gs orbitals for the wf
cp ../part_nf.tmp gs_orb.inp
echo ' $DATA' >> gs_orb.inp
echo " need orbitals" >> gs_orb.inp
echo " C1" >> gs_orb.inp
/home/sistik/utility/GAMConvStr ../$STRINPUT | tail -n $NAtoms >> gs_orb.inp
tail -n $NTail ../$INPUT >> gs_orb.inp
#
IsCASSCF=`grep SCFTYP ../$INPUT | grep -io MCSCF`
if [ -z $IsCASSCF ]; then
  /home/slavicek/gamess04/trunk/rungms gs_orb.inp > gs_orb.out 2>/dev/null
else
  /home/slavicek/GAMESS11/gamess/tests/rungms gs_orb.inp > gs_orb.out 2>/dev/null
fi
#
NAOrb=`grep "NUMBER OF CARTESIAN GAUSSIAN BASIS FUNCTIONS" gs_orb.out | awk -F"=" '{print $2}' | awk -F" " '{print $1}'`
NMOrb=`grep "DIMENSIONS OF THE SYMMETRY SUBSPACES ARE" gs_orb.out -A1 | tail -n 1 | awk -F" " '{print $NF}'`
MODNFAOrb=$(( $NAOrb % 5 ))
if [ $NAOrb ]; then
  NGrep=$(( ( ( $NAOrb / 5 ) + 1 ) * $NMOrb + 4 ))
else
  NGrep=$(( ( $NAOrb / 5 ) * $NMOrb + 4 ))
fi
IsCLOSED=`grep "CLOSED SHELL ORBITALS" gs_orb.dat`
IsMCSCF=`grep "OPTIMIZED MCSCF" gs_orb.dat`
if [ "$IsCLOSED" ]; then
  grep "CLOSED SHELL ORBITALS" gs_orb.dat -A$NGrep | tail -n $(( $NGrep - 2 )) > ../orb.temp
elif [ "$IsMCSCF" ]; then
  grep "OPTIMIZED MCSCF" gs_orb.dat -A$NGrep | tail -n $(( $NGrep - 2 )) > ../orb.temp
fi
#
#  now we need to calculate energies for different structures for gradient using wf above
NLines=`wc -l ../strall.temp | awk -F" " '{print $1}'`
NStruct=$(( $NLines / ( $NAtoms + 2 ) ))
NCycle=$(( $NStruct / 2 ))
NState=`grep "NSTATE=" ../$INPUT | awk -F"NSTATE=" '{print $2}' | awk -F" " '{print $1}'`
echo $NCycle >> ../force_en.temp
echo $NState >> ../force_en.temp
for ((i=1; i<=$NCycle; i++)); do
  FILE=force_gam_$i"m.inp"
  NHead=$(( ( $NAtoms + 2 ) * $i * 2 ))
  NTail=$(( ( $NAtoms + 2 ) * 2 ))
  head -n $NHead ../strall.temp | tail -n $NTail > stract.temp
  cp ../part_nf.tmp $FILE
  echo " \$GUESS  GUESS=MOREAD  NORB=$NMOrb \$END" >> $FILE
  echo " \$CPMCHF RCRODR=.TRUE. MICIT=10 KICIT=5 \$END" >> $FILE
  echo ' $DATA' >> $FILE
  head -n 2 stract.temp | tail -n 1 >> $FILE
  echo " C1" >> $FILE
  head -n $(( $NAtoms + 2 )) stract.temp > temp1.tmp
  /home/sistik/utility/GAMConvStr temp1.tmp | tail -n $NAtoms >> $FILE
  echo ' $END' >> $FILE
  rm temp1.tmp
  cat ../orb.temp >> $FILE
  if [ -z $IsCASSCF ]; then
    /home/slavicek/gamess04/trunk/rungms $FILE > $FILE.out 2>/dev/null
  else
    /home/slavicek/GAMESS11/gamess/tests/rungms $FILE > $FILE.out 2>/dev/null
  fi
  IsDoneWell1=`grep "ddikick.x: exited gracefully." $FILE.out | grep gracefully`
  if [ -z "$IsDoneWell1" ]; then
    cp ../part_nf.tmp $FILE
    echo " \$GUESS GUESS=HUCKEL \$END" >> $FILE
    echo " \$CPMCHF RCRODR=.TRUE. MICIT=10 KICIT=5 \$END" >> $FILE
    echo ' $DATA' >> $FILE
    head -n 2 stract.temp | tail -n 1 >> $FILE
    echo " C1" >> $FILE
    head -n $(( $NAtoms + 2 )) stract.temp > temp1.tmp
    /home/sistik/utility/GAMConvStr temp1.tmp | tail -n $NAtoms >> $FILE
    echo ' $END' >> $FILE
    rm temp1.tmp
    if [ -z $IsCASSCF ]; then
      /home/slavicek/gamess04/trunk/rungms $FILE > $FILE.out 2>/dev/null
    else
      /home/slavicek/GAMESS11/gamess/tests/rungms $FILE > $FILE.out 2>/dev/null
    fi
  fi
  for ((j=1; j<=$NState; j++)); do
    Energy[$j]=`grep "$j  ENERGY" $FILE.out | tail -n 1 | awk -F"=" '{print $2}' | awk -F" " '{print $1}'`
  done
  echo ${Energy[@]} >> ../force_en.temp


  FILE=force_gam_$i"p.inp"
  cp ../part_nf.tmp $FILE
  echo " \$GUESS  GUESS=MOREAD  NORB=$NMOrb \$END" >> $FILE
  echo " \$CPMCHF RCRODR=.TRUE. MICIT=10 KICIT=5 \$END" >> $FILE
  echo ' $DATA' >> $FILE
  tail -n $(( $NAtoms + 1 )) stract.temp | head -n 1 >> $FILE
  echo " C1" >> $FILE
  tail -n $(( $NAtoms + 2 )) stract.temp > temp2.tmp
  /home/sistik/utility/GAMConvStr temp2.tmp | tail -n $NAtoms >> $FILE
  echo ' $END' >> $FILE
  rm temp2.tmp
  cat ../orb.temp >> $FILE
  if [ -z $IsCASSCF ]; then
    /home/slavicek/gamess04/trunk/rungms $FILE > $FILE.out 2>/dev/null
  else
    /home/slavicek/GAMESS11/gamess/tests/rungms $FILE > $FILE.out 2>/dev/null
  fi
  IsDoneWell2=`grep "ddikick.x: exited gracefully." $FILE.out | grep gracefully`
  if [ -z "$IsDoneWell2" ]; then
    cp ../part_nf.tmp $FILE
    echo " \$GUESS GUESS=HUCKEL \$END" >> $FILE.out
    echo " \$CPMCHF RCRODR=.TRUE. MICIT=10 KICIT=5 \$END" >> $FILE
    echo ' $DATA' >> $FILE
    tail -n $(( $NAtoms + 1 )) stract.temp | head -n 1 >> $FILE
    echo " C1" >> $FILE
    tail -n $(( $NAtoms + 2 )) stract.temp > temp2.tmp
    /home/sistik/utility/GAMConvStr temp2.tmp | tail -n $NAtoms >> $FILE
    echo ' $END' >> $FILE
    rm temp2.tmp
    if [ -z $IsCASSCF ]; then
      /home/slavicek/gamess04/trunk/rungms $FILE > $FILE.out 2>/dev/null
    else
      /home/slavicek/GAMESS11/gamess/tests/rungms $FILE > $FILE.out 2>/dev/null
    fi
  fi
  for ((j=1; j<=$NState; j++)); do
    Energy[$j]=`grep "$j  ENERGY" $FILE.out | tail -n 1 | awk -F"=" '{print $2}' | awk -F" " '{print $1}'`
  done
  echo ${Energy[@]} >> ../force_en.temp
  echo " " >> ../force_en.temp
  
  rm stract.temp
done
cd ..

if [ -e force.dat ]; then
  mv force.dat old.force.dat
fi

./fNumForce > numforce.dat

#rm -r force_en.temp orb.temp strall.temp part_nf.tmp NUM_FORCE


